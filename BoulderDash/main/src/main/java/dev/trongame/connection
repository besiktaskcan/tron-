package dev.trongame.connection;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;



public class DAOConnection {



		 private static DAOConnection instance          = null;
		    private String query = "{call add_winners_player(?) }";

		    public DAOConnection() {
		        this.read();
		    }

		    public static synchronized DAOConnection getInstance() {
		        if (instance == null) {
		            setInstance(new DAOConnection());
		        }
		        return instance;
		    }

		    private static void setInstance(final DAOConnection instance) {
		        DAOConnection.instance = instance;
		    }

		    
		    public void read(){
		    	Connection conn = null;
		    	Statement stmt = null; 
		    	ResultSet rs = null;
		    	try{
		    		Class.forName("com.mysql.jdbc.Driver").newInstance();
		    		String connectionUrl = "jdbc:mysql://localhost:8889/Tron";
		    		String connectionUser = "root";
		    		String connectionPassword = "root";
		    		conn = DriverManager.getConnection(connectionUrl, connectionUser, connectionPassword);
		    		stmt = conn.createStatement();
		    		rs = stmt.executeQuery(query);
		    		while(rs.next()){
		    			System.out.println(String.format("%s - %s", rs.getString("player") +
		    					" " + rs.getString("timer")));
		    		}
		    	}catch(Exception e){
		    		e.printStackTrace();
		    	}finally{
		    		try{ if (rs != null) rs.close(); } catch (SQLException e){ e.printStackTrace();}
		    		try{ if (stmt != null) stmt.close(); } catch (SQLException e){ e.printStackTrace();}
		    		try{ if (conn != null) conn.close(); } catch (SQLException e){ e.printStackTrace();}
		    	}
		    }
		    
		   /* private void readFile() {
		        BufferedReader buffer;
		        try {
		            buffer = new BufferedReader(new InputStreamReader(new FileInputStream(FileName)));
		            this.setHelloWorldMessage(buffer.readLine());
		            buffer.close();
		        } catch (final FileNotFoundException exception) {
		            exception.printStackTrace();
		        } catch (final IOException exception) {
		            exception.printStackTrace();
		        }
		    }*/

		    
		    
}
